# workflow 名称
name: image-mirror

# 当新建/编辑 issues 时触发
on:
  issues:
    types:
      - opened
      - reopened
      - edited

# 需要执行的任务列表
jobs:
  # 镜像转换任务
  sync_to_target_registry:
    # 运行环境
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.actor }}
      cancel-in-progress: true
    # 镜像转换任务的步骤列表
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Update issue title with image summary
        uses: actions/github-script@v7
        with:
          script: |
            const issue_number = context.issue.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const body = context.payload.issue.body;

            const lines = body.split(/\r?\n/).map(line => {
              // 移除 --arch 参数及其值
              return line.trim().replace(/\s*--arch\s+.*/i, '');
            }).filter(Boolean);
            
            // 如果第一行是 ARCH:，则从镜像列表中排除
            const imageLines = lines[0].toUpperCase().startsWith('ARCH:') ? lines.slice(1) : lines;

            const top3 = imageLines.slice(0, 3).join(' | ');
            const total = imageLines.length;
            const newTitle = `${top3}  (共 ${total} 个镜像)`;

            await github.rest.issues.update({
              owner,
              repo,
              issue_number,
              title: newTitle
            });
            
      - name: Add image-mirror label
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: 'image-mirror'

      - name: Find Comment
        uses: peter-evans/find-comment@v3
        id: fc
        with:
          issue-number: ${{ github.event.issue.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Syncing image to TargetRegistry

      - name: Create or Update In-Progress Comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            Syncing image to TargetRegistry, please wait a moment...
            [Check the progress](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          reactions: rocket
          edit-mode: ${{ steps.fc.outputs.comment-id && 'replace' || 'create' }}
          
      - name: Prepare tools
        run: |
          wget -q https://github.com/AliyunContainerService/image-syncer/releases/download/v1.5.4/image-syncer-v1.5.4-linux-amd64.tar.gz
          tar zxvf image-syncer-v1.5.4-linux-amd64.tar.gz
          
      - name: Start sync by architecture
        id: syncImage
        env:
          TARGET_REGISTRY_PASSWORD: ${{ secrets.TARGET_REGISTRY_PASSWORD }}
          TARGET_REGISTRY_USER: ${{ vars.TARGET_REGISTRY_USER }}
          TARGET_NAMESPACE: ${{ vars.TARGET_NAMESPACE }}
          TARGET_REGISTRY: ${{ vars.TARGET_REGISTRY }}
        run: |
          python .github/scripts/sync_by_arch.py "${{ github.event.issue.body }}"

      - name: Add 'succeed' label on success
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['succeed']
            })

      - name: Prepare content for success comment
        id: get-comment-body
        run: |
          target_images=$(cat dockerhub-image.yml)
          target_images="${target_images//'%'/'%25'}"
          target_images="${target_images//$'\n'/'%0A'}"
          target_images="${target_images//$'\r'/'%0D'}"
          echo "target_images=$target_images" >> $GITHUB_OUTPUT

          source_images=$(cat images-init.yml)
          source_images="${source_images//'%'/'%25'}"
          source_images="${source_images//$'\n'/'%0A'}"
          source_images="${source_images//$'\r'/'%0D'}"
          echo "source_images=$source_images" >> $GITHUB_OUTPUT

      - name: Update comment on success
        if: success()
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            [Check the progress](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            ## ✅ 镜像同步成功

            ### 源镜像列表
            ```text
            ${{ steps.get-comment-body.outputs.source_images }}
            ```

            ### 目标镜像列表
            ```text
            ${{ steps.get-comment-body.outputs.target_images }}
            ```
          reactions: hooray
          edit-mode: replace

      - name: Create or update comment on failure
        if: failure()
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            ❌ **镜像同步失败**
            请检查以下几点：
            - **Issue 格式**是否正确？（`ARCH:`或`--arch`拼写错误、镜像名不合法等）
            - **源镜像**是否拼写错误、Tag 是否存在？
            - 该镜像是否为**公开可拉取**的镜像？
            - 目标 Registry 是否有访问权限？

            **详细日志请查看:**
            [Workflow Run Details](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          reactions: confused
          edit-mode: replace
